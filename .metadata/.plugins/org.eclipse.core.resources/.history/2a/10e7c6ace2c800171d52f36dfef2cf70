import java.io.File;
import java.io.FileNotFoundException;
import java.util.LinkedHashMap;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.stage.FileChooser;

public class PaycheckFile { 
	
	public LinkedHashMap <Integer, Double> salaryCheat = new LinkedHashMap<Integer, Double>();
	
	public LinkedHashMap<Integer, Double> getSalaryCheat(Integer key, Double value) {
		
		salaryCheat.put(key, value);
		return salaryCheat;
	}
	
	//Parsing the file 
	public void parseFile(File file) {
		
		try {
			//Reading the file selected
			Scanner scanner = new Scanner(file);
			
			//Creating a regex's pattern to get the salary from file
			String regexSalaryPattern = "[$]\\d+[,]\\d+";
			Pattern checkSalaryRegex = Pattern.compile(regexSalaryPattern);			
			
			//Creating a regex's pattern to get year's of experience from file
			String regexExperiencePattern = "(\\d[-]\\d+|\\d+[+]?)";
			Pattern checkExperienceRegex = Pattern.compile(regexExperiencePattern);
			
		
			while (scanner.hasNextLine()) {
	
				String input = scanner.nextLine();
				Matcher salaryMatcher = checkSalaryRegex.matcher(input);
				Matcher experienceMatcher = checkExperienceRegex.matcher(input);
				
				 while (experienceMatcher.find() && salaryMatcher.find()) {
					 String e = experienceMatcher.group().trim();
					 String s = salaryMatcher.group().trim();
					 System.out.println(s);
					 
					 String years = "";
					 years = e.replace("-", " ");
					 
					 System.out.println(years);
					String[] year = years.split("\\s");
					
					 
					double income;
					income = Double.parseDouble(s.replace("$", "").replace(",", ""));
					
					if (year.length > 1) {
						int minExperience = Integer.parseInt(year[0]);
						int maxExperience = Integer.parseInt(year[1]);
						
						if (minExperience < maxExperience) {
							while (minExperience <= maxExperience) {
								getSalaryCheat(minExperience, income);
								minExperience++;
							}
						}
					}
				
				 }
				
				 System.out.println(salaryCheat);
				 DataStorage ds = new DataStorage();
				 ds.setMap(salaryCheat);
				 
				 CreatePaycheckStage paycheck = new CreatePaycheckStage();
				 ds.giveMAp(paycheck);
				 
				 
				 
				 
			}
			
			scanner.close();
		} catch (FileNotFoundException e) {
			System.out.println("No file found!");
		}
		
	}	
	
	public double accessingSalaryCheat(Integer key) {
		return salaryCheat.get(key);
	}
} 